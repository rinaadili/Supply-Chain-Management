/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.view;

import BLL.City;
import BLL.Country;
import BLL.Suppliers;
import DAL.CityInterface;
import DAL.CityRepository;
import DAL.CountryInterface;
import DAL.CountryRepository;
import DAL.SCHMException;
import DAL.SupplierInterface;
import DAL.SupplierRepository;
import gui.model.CityComboBoxModel;
import gui.model.CountryComboBoxModel;
import gui.model.SupplierTableModel;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author cc.ks
 */
public class SupplierForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form SupplierForm
     */
    
    SupplierInterface sir = new SupplierRepository();
    SupplierTableModel stm = new SupplierTableModel();
    CountryInterface coir = new CountryRepository();
    CityInterface cyir = new CityRepository();
    
    CountryComboBoxModel ccbbm;
    CityComboBoxModel cycbbm;
    
    
    public SupplierForm() {
        initComponents();
        loadTable();
        tabelaSelectedIndexChange();
        populateCountryComboBox();
        cityCB.setEnabled(false);
    }
      public static boolean isValidEmailAddress(String email) {
            boolean result = true;
            try {
               InternetAddress emailAddr = new InternetAddress(email);
               emailAddr.validate();
            } catch (AddressException ex) {
               result = false;
            }
            return result;
        }
    
    private void tabelaSelectedIndexChange() {
        final ListSelectionModel rowSM = stable.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent Ise) {
                if (Ise.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel rowSM = (ListSelectionModel) Ise.getSource();
                int selectedIndex = rowSM.getAnchorSelectionIndex();
                if (selectedIndex > -1) {
                    Suppliers s = stm.getSupplier(selectedIndex);
                    CompanyNameTF.setText(s.getCompanyName() + "");
                    PhoneTF.setText(s.getPhone());
                    EmailTF.setText(s.getEmail());
                    countryCB.setSelectedItem(s.getCityID().getCountryID());
                    countryCB.repaint();
                    cityCB.setSelectedItem(s.getCityID());
                    cityCB.repaint();
                }
            }
        });
    }
    
         public void loadTable() {
        try {
            List<Suppliers> list = sir.findAll();
            stm.add(list);
            stable.setModel(stm);
            stm.fireTableDataChanged();
        } catch (SCHMException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }
    
         
         public void populateCountryComboBox() {
        try {
            List<Country> list = coir.findAll();
            ccbbm = new CountryComboBoxModel(list);
            countryCB.setModel(ccbbm);
            countryCB.repaint();
            countryCB.addActionListener (new ActionListener () {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent e) {
                    if(countryCB.getSelectedIndex() != -1){
                        Country co = (Country) countryCB.getSelectedItem();
                        populateCityComboBox(co);
                        cityCB.setEnabled(true);
                    }else{
                        cityCB.setEnabled(false);
                    }
                }
            });
        } catch (SCHMException ex) {

        }
    }
     
     public void populateCityComboBox(Country id) {
        try {
            List<City> list = cyir.findByCountryID(id);
            cycbbm = new CityComboBoxModel(list);
            cityCB.setModel(cycbbm);
            cityCB.repaint();
        } catch (SCHMException ex) {

        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CompanyNameTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PhoneTF = new javax.swing.JTextField();
        EmailTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        stable = new javax.swing.JTable();
        SaveButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        cityCB = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        countryCB = new javax.swing.JComboBox();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Furnizuesit");

        jLabel1.setText("Company Name:");

        jLabel3.setText("City:");

        CompanyNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompanyNameTFActionPerformed(evt);
            }
        });

        jLabel4.setText("Email");

        jLabel6.setText("Phone:");

        PhoneTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneTFActionPerformed(evt);
            }
        });

        EmailTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTFActionPerformed(evt);
            }
        });

        stable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(stable);

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Country:");

        countryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveButton)
                .addGap(18, 18, 18)
                .addComponent(DeleteButton)
                .addGap(18, 18, 18)
                .addComponent(ClearButton)
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(countryCB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(cityCB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(CompanyNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(PhoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(CompanyNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(EmailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(countryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(cityCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveButton)
                    .addComponent(DeleteButton)
                    .addComponent(ClearButton))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CompanyNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompanyNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CompanyNameTFActionPerformed

    private void EmailTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTFActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
              int row = stable.getSelectedRow();
        if (row > -1) {
            Object[] ob = {"Po", "Jo"};
            int i = JOptionPane.showOptionDialog(this, "A dëshironi ta fshini ?", "Fshirja", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
            if (i == 0) {
                Suppliers s = stm.getSupplier(row);
                try {
                    sir.delete(s);
                } catch (SCHMException es) {
                    JOptionPane.showMessageDialog(this, es.getMessage());
                }
                clearField();
                loadTable();
            } else {
                clearField();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Nuk keni selektuar asgje per te fshire!");

        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
         if (!CompanyNameTF.getText().trim().equals("") &&
            EmailTF != null&& !PhoneTF.getText().trim().equals("")&& isValidEmailAddress(EmailTF.getText())) {
            int row = stable.getSelectedRow();
            if (row == -1) {
                Suppliers s = new Suppliers();
                s.setCompanyName(CompanyNameTF.getText());
                s.setCityID((City) cityCB.getSelectedItem());
                s.setPhone(PhoneTF.getText());
                s.setEmail(EmailTF.getText());

                try {
                    sir.create(s);
                } catch (SCHMException es) {
                    JOptionPane.showMessageDialog(this, es.getMessage());
                    return;
                }
            } else {
                Suppliers s = stm.getSupplier(row);
                s.setCompanyName(CompanyNameTF.getText());
                s.setCityID((City) cityCB.getSelectedItem());
                s.setPhone(PhoneTF.getText());
                s.setEmail(EmailTF.getText());

                try {
                    sir.edit(s);
                } catch (SCHMException es) {
                    JOptionPane.showMessageDialog(this, es.getMessage());
                    return;
                }               
            }
            clearField();
            loadTable();

        } else {
            JOptionPane.showMessageDialog(this, "Ju lutem plotesoni te gjitha fushat obligative!");
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        clearField();
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void PhoneTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneTFActionPerformed

    private void countryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryCBActionPerformed
    
    
     public void clearField() {
        stable.clearSelection();
        CompanyNameTF.setText("");
        PhoneTF.setText("");
        EmailTF.setText("");
        countryCB.setSelectedIndex(-1);
        countryCB.repaint();
        cityCB.setEnabled(false);
        cityCB.setSelectedIndex(-1);
        cityCB.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JTextField CompanyNameTF;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField EmailTF;
    private javax.swing.JTextField PhoneTF;
    private javax.swing.JButton SaveButton;
    private javax.swing.JComboBox cityCB;
    private javax.swing.JComboBox countryCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable stable;
    // End of variables declaration//GEN-END:variables
}
